<?xml version="1.0" encoding="utf-8"?>
<!--
/*
** Copyright 2011, The Android Open Source Project
**
** Licensed under the Apache License, Version 2.0 (the "License");
** you may not use this file except in compliance with the License.
** You may obtain a copy of the License at
**
**     http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
*/
-->

<!-- These resources are around just to allow their values to be customized
     for different hardware and product builds. -->
<resources>

    <bool name="config_showNavigationBar">true</bool>

    <!-- If this is true, the screen will fade off. -->
    <bool name="config_animateScreenLights">false</bool>

    <bool name="config_batterySdCardAccessibility">true</bool>

    <!-- Flag indicating whether the surface flinger has limited
        alpha compositing functionality in hardware. If set, the window
        manager will disable alpha trasformation in animations where not
        strictly needed. -->
    <bool name="config_sf_limitedAlpha">false</bool>
 
   <bool name="config_allowAllRotations">true</bool>

    <!-- Flag indicating whether the surface flinger is inefficient
        at performing a blur. Used by parts of the UI to turn off
        the blur effect where it isn't worth the performance hit.
        As of Honeycomb, blurring is not supported anymore. -->
    <bool name="config_sf_slowBlur">true</bool>

    <bool name="config_automatic_brightness_available">true</bool>

    <!-- Array of light sensor LUX values to define our levels for auto backlight brightness support.
         The N entries of this array define N  1 zones as follows:

         Zone 0:        0 <= LUX < array[0]
         Zone 1:        array[0] <= LUX < array[1]
         ...
         Zone N:        array[N - 1] <= LUX < array[N]
         Zone N + 1     array[N] <= LUX < infinity

         Must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLevels">
	<item>15</item>
	<item>150</item>
	<item>1500</item>
	<item>15000</item>
    </integer-array>

    <!-- Array of output values for LCD backlight corresponding to the LUX values
         in the config_autoBrightnessLevels array.  This array should have size one greater
         than the size of the config_autoBrightnessLevels array.
         This must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLcdBacklightValues">
	<item>0</item>
	<item>90</item>
	<item>150</item>
	<item>196</item>
	<item>255</item>
    </integer-array>

    <!-- Array of output values for button backlight corresponding to the LUX values
         in the config_autoBrightnessLevels array.  This array should have size one greater
         than the size of the config_autoBrightnessLevels array.
         This must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessButtonBacklightValues">
        <item>0</item>
        <item>0</item>
        <item>0</item>
        <item>0</item>
        <item>0</item>
    </integer-array>

    <!-- Array of output values for keyboard backlight corresponding to the LUX values
         in the config_autoBrightnessLevels array.  This array should have size one greater
         than the size of the config_autoBrightnessLevels array.
         This must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessKeyboardBacklightValues">
        <item>255</item>
        <item>255</item>
        <item>0</item>
        <item>0</item>
        <item>0</item>
    </integer-array>

    <!-- Minimum screen brightness allowed by the power manager. -->
    <integer name="config_screenBrightnessDim">20</integer>


    <!-- List of regexpressions describing the interface (if any) that represent tetherable
         USB interfaces.  If the device doesn't want to support tething over USB this should
         be empty.  An example would be "usb.*" -->
    <string-array translatable="false" name="config_tether_usb_regexs">
	<item>"rndis0"</item>
    </string-array>

    <!-- List of regexpressions describing the interface (if any) that represent tetherable
         Wifi interfaces.  If the device doesn't want to support tethering over Wifi this
         should be empty.  An example would be "softap.*" -->
    <string-array translatable="false" name="config_tether_wifi_regexs">
        <item>"wlan0"</item>
    </string-array>

    <!-- List of regexpressions describing the interface (if any) that represent tetherable
         bluetooth interfaces.  If the device doesn't want to support tethering over bluetooth this
         should be empty. -->
    <string-array translatable="false" name="config_tether_bluetooth_regexs">
        <item>"bt-pan"</item>
    </string-array>

   <!-- Boolean indicating whether the wifi chipset has dual frequency band support -->
    <bool translatable="false" name="config_wifi_dual_band_support">true</bool>

    <!-- Device type information conforming to Annex B format in WiFi Direct specification.
         The default (10-0050F204-5) represents a dual-mode smartphone -->
    <!--# Primary Device Type
        # Used format: <categ>-<OUI>-<subcateg>
        # categ = Category as an integer value
        # OUI = OUI and type octet as a 4-octet hex-encoded value; 0050F204 for
        # default WPS OUI
        # subcateg = OUI-specific Sub Category as an integer value
        # Examples:
        # 1-0050F204-1 (Computer / PC)
        # 1-0050F204-2 (Computer / Server)
        # 5-0050F204-1 (Storage / NAS)
        # 6-0050F204-1 (Network Infrastructure / AP) -->
    <string translatable="false" name="config_wifi_p2p_device_type">1-0050F204-1</string>

    <!-- The default iface on which to monitor data use -->
    <string name="config_datause_iface">wlan0</string>

    <!--  Maximum number of supported users -->
    <integer name="config_multiuserMaximumUsers">5</integer>

    <!-- Whether UI for multi user should be shown -->
    <bool name="config_enableMultiUserUI">true</bool>

    <!-- reference volume index for music stream to limit headphone volume and display warning -->
    <integer name="config_safe_media_volume_index">6</integer>

    <!-- The attenuation in dB applied to the sound effects played
         through AudioManager.playSoundEffect() when no volume is specified. -->
    <integer name="config_soundEffectVolumeDb">-2</integer>

    <!-- The attenuation in dB applied to the lock/unlock sounds. -->
    <integer name="config_lockSoundVolumeDb">-2</integer>

    <!-- The duration (in milliseconds) of a short animation. -->
    <integer name="config_shortAnimTime">100</integer>

    <!-- The duration (in milliseconds) of a medium-length animation. -->
    <integer name="config_mediumAnimTime">250</integer>

    <!-- The duration (in milliseconds) of a long animation. -->
    <integer name="config_longAnimTime">350</integer>

    <!-- The duration (in milliseconds) of the activity open/close and fragment open/close animations. -->
    <integer name="config_activityShortDur">75</integer>
    <integer name="config_activityDefaultDur">145</integer>

    <!-- Enables or disables fading edges when marquee is enabled in TextView. -->
    <bool name="config_ui_enableFadingMarquee">false</bool>

    <!-- Device configuration indicating whether we should avoid using accelerated graphics
        in certain places to reduce RAM footprint. This is ignored if ro.config.low_ram
        is true (in that case this is assumed true as well). It can allow you to tune down
        your device's memory use without going to the point of causing applications to turn
        off features. -->
    <bool name="config_avoidGfxAccel">false</bool>

    <!-- Whether WiFi display is supported by this device.
         There are many prerequisites for this feature to work correctly.
         Here are a few of them:
         * The WiFi radio must support WiFi P2P.
         * The WiFi radio must support concurrent connections to the WiFi display and
           to an access point.
         * The Audio Flinger audio_policy.conf file must specify a rule for the "r_submix"
           remote submix module.  This module is used to record and stream system
           audio output to the WiFi display encoder in the media server.
         * The remote submix module "audio.r_submix.default" must be installed on the device.
         * The device must be provisioned with HDCP keys (for protected content).
    -->
    <bool name="config_enableWifiDisplay">false</bool>

    <string-array translatable="false" name="config_globalActionsList">
        <item>power</item>
        <item>reboot</item>
        <item>airplane</item>
        <item>silent</item>
        <item>bugreport</item>
        <item>users</item>
    </string-array>


    <!-- Sets the package names whose certificates should be used to
        verify location providers are allowed to be loaded.
    -->
    <string-array name="config_locationProviderPackageNames" translatable="false">
        <!-- The Google provider -->
        <item>com.google.android.gms</item>
        <!-- The standard AOSP fused location provider -->
        <item>com.android.location.fused</item>
    </string-array>

    <!-- Control whether a desk dock event should override the default bluetooth
         audio routing, FORCE_BT_DESK_DOCK, with an analog dock, FORCE_ANALOG_DOCK. -->
    <bool name="config_forceAnalogDeskDock">true</bool>

</resources>
